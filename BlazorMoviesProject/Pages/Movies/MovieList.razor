@page "/moviedetails"
@using BlazorMoviesProject.Models
@using BlazorMoviesProject.Services.IServices
@inject IMovieService MovieService
@inject IJSRuntime JsRuntime

<h1 class="text-center mt-5 display-3">Movies</h1>
<div class="container-xl">
    @if (MovieDetails is null)
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3 justify-content-center justify-content-xl-start">
            @for (int i = 0; i < 8; i++)
            {
                <div class="col">
                    <MovieCard />
                </div>
            }
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3 justify-content-center justify-content-xl-start">
            @foreach (var movie in MovieDetails)
            {
                <div class="col" @key="movie.Id">
                    <MovieCard Movie="movie" OnBtnClick="ShowMovieDetails" />
                </div>
            }
        </div>

        <MovieModal MovieDetails="SelectedMovieDetails" />
    }
</div>





@code {

   

    private IEnumerable<MovieDetails> MovieDetails = new List<MovieDetails>();
    private MovieDetails? SelectedMovieDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MovieDetails = await MovieService.GetMovies();
    }

    private async Task ShowMovieDetails(int movieId)
    {
        SelectedMovieDetails = await MovieService.GetMovieById(movieId);
        await JsRuntime.InvokeVoidAsync("eval", $"new bootstrap.Modal(document.getElementById('movie-modal')).show()");
    }





}
